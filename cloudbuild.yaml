steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest',
        '.'
      ]

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest'
      ]

  # Step 3: Cleanup previous resources
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸ§¹ Cleaning up existing GCP resources..."
        gcloud compute instances delete web-server --zone=us-central1-a --quiet || true
        gcloud compute firewall-rules delete allow-http-https --quiet || true
        gcloud compute networks subnets delete private-subnet --region=us-central1 --quiet || true
        gcloud compute networks delete my-vpc --quiet || true

  # Step 4: Terraform init
  - name: 'hashicorp/terraform:1.6.6'
    args: ['init']

  # Step 5: Terraform validate
  - name: 'hashicorp/terraform:1.6.6'
    args: ['validate']

  # Step 6: Terraform apply
  - name: 'hashicorp/terraform:1.6.6'
    args:
      [
        'apply',
        '-auto-approve',
        '-lock-timeout=60s'
      ]

  # Step 7: Run app tests using your separate script
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod +x run_test.sh
        ./run_test.sh

options:
  logging: CLOUD_LOGGING_ONLY

timeout: 900s
