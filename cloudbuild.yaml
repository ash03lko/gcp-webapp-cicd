options:
  logging: CLOUD_LOGGING_ONLY
  volumes:
    - name: tf-cache
      path: /workspace/.terraform

steps:
  # ✅ Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest',
        '.'
      ]

  # ✅ Run local unit tests (before deployment)
  - name: 'python'
    entrypoint: 'python3'
    args: ['-m', 'unittest', 'discover', '-s', 'test']
    env:
      - 'APP_URL=http://localhost'

  # ✅ Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest'
      ]

  # ✅ Initialize Terraform
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'terraform'
    args: ['init']
    volumes:
      - name: tf-cache
        path: /workspace/.terraform

  # ✅ Destroy existing infrastructure
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'terraform'
    args: ['destroy', '-auto-approve']
    volumes:
      - name: tf-cache
        path: /workspace/.terraform

  # ✅ Apply new infrastructure
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'terraform'
    args: ['apply', '-auto-approve']
    volumes:
      - name: tf-cache
        path: /workspace/.terraform

  # ✅ Capture external IP
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform output -raw web_server_external_ip > ip.txt
        cat ip.txt

  # ✅ Run tests on deployed app
  - name: 'python'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        EXTERNAL_IP=$(cat ip.txt)
        echo "Running tests on deployed app at http://$EXTERNAL_IP"
        APP_URL=http://$EXTERNAL_IP python3 -m unittest discover -s test

timeout: 1800s
