options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 🚀 Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest',
        '.'
      ]

  # 🚀 Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/graphite-store-463414-p2/my-repo/my-app:latest'
      ]

  # ⚠️ Manual cleanup to prevent 409 conflicts
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "🧹 Cleaning up existing GCP resources..."
        gcloud compute instances delete web-server --zone=us-central1-a --quiet || echo "✅ No VM found or already deleted"
        gcloud compute firewall-rules delete allow-http-https --quiet || echo "✅ No firewall allow-http-https found"
        gcloud compute firewall-rules delete allow-ssh-from-iap --quiet || echo "✅ No firewall allow-ssh-from-iap found"
        gcloud compute networks subnets delete private-subnet --region=us-central1 --quiet || echo "✅ No private subnet found"
        gcloud compute networks delete my-vpc --quiet || echo "✅ No VPC found"

  # ⚙️ Terraform init
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform init

  # ⚙️ Terraform validate
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        terraform validate

  # ⚙️ Terraform apply fresh infra
  - name: 'hashicorp/terraform:1.6.6'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "🚀 Applying fresh infrastructure..."
        terraform apply -auto-approve

  # ✅ Run test script
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod +x /workspace/run_test.sh
        /workspace/run_test.sh

timeout: 1800s
