options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Build & push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/my-app', '.'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 'us-central1-docker.pkg.dev/$PROJECT_ID/my-repo/my-app'
    ]

  # Step 2: Clean up GCP resources if exist
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸ§¹ Cleaning up existing GCP resources..."
        gcloud compute firewall-rules list --filter="network=my-vpc" --format="value(name)" | \
        xargs -r -n1 gcloud compute firewall-rules delete --quiet || true
        gcloud compute instances delete web-server --zone=us-central1-a --quiet || true
        gcloud compute networks subnets delete private-subnet --region=us-central1 --quiet || true
        gcloud compute networks delete my-vpc --quiet || true

  # Step 3: Terraform init
  - name: 'hashicorp/terraform:1.6.6'
    args: ['init']

  # Step 4: Terraform validate
  - name: 'hashicorp/terraform:1.6.6'
    args: ['validate']

  # Step 5: Terraform apply
  - name: 'hashicorp/terraform:1.6.6'
    args: ['apply', '-auto-approve']

  # Step 6: Run tests
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - './run_test.sh'
